html_nodes('h3') %>%html_text())
location <- c(location,web %>% html_nodes('div.position') %>%
html_nodes('div.p_top') %>% html_nodes('a') %>%
html_nodes('span') %>%html_nodes('em') %>%html_text())
salary <- c(salary,web %>% html_nodes('div.position') %>%
html_nodes('div.p_bot') %>% html_nodes('div') %>%
html_nodes('span') %>%html_text())
# simple data clean
require<-
c(require, web %>%html_nodes(xpath="//li[@class]/div[1]/div[1]/div[2]/div/text()")
%>%html_text())
require<-require[require!="\n                                    "]
require<-gsub(" ","",require)
require<-gsub("\n","",require)
time<- c(time,web %>% html_nodes('div.position') %>%
html_nodes('div.p_top') %>% html_nodes('span') %>%html_text())
time<-time[grepl("[0-9]",time)]
company <- c(company,web %>% html_nodes('div.company') %>%
html_nodes('div.company_name') %>% html_nodes('a') %>%
html_text())
companysituation <- c(companysituation,web %>% html_nodes('div.company') %>%
html_nodes('div.industry') %>%
html_text())
companysituation<-gsub("\n","",companysituation)
companysituation<-gsub(" ","",companysituation)
companyintro <- c(companyintro,web %>% html_nodes('div.li_b_r') %>%
html_text())
tags<- c(tags, web %>% html_nodes("div.list_item_bot")
%>% html_nodes("div.li_b_l")
%>%html_text())
tags<-gsub("\n","/",tags)
tags<-gsub(" ","",tags)
# data from everypage is stored in pracdata
pracdata<-data.frame(name,location,salary,require,time,company,companysituation,companyintro,tags)
print(pracdata)
# combine
data<-rbind(data,pracdata)
name=salary=require=location=time=company=companysituation=companyintro=tags=NULL
# if needs speed up, time seperation can be set small but may cause requirement to log in.
#if(###)login()
#Sys.sleep(0.5)
x1<-runif(1,3,10)
Sys.sleep(x1)
}
# close browser
remDr$closeWindow()
# output data
write.table(data,file='filename.txt')
write.csv(data,file='filename.csv')
}
library("lubridate",quietly = TRUE,warn.conflicts = FALSE,attch)
library("VIM",quietly = TRUE,warn.conflicts = FALSE)
library("mice",quietly = TRUE,warn.conflicts = FALSE)
setwd("/Users/mayuheng/Documents/GitHub/Data-Science-and-Innovation")
# import data
shenduxuexidata<-read.csv('data/shenduxuexidata.csv',
fileEncoding = "UTF-8",stringsAsFactors=FALSE)
jiqixuexidata<-read.csv('data/jiqixuexidata.csv',
fileEncoding = "UTF-8",stringsAsFactors=FALSE)
tuxiangchulidata<-read.csv('data/tuxiangchulidata.csv',
fileEncoding = "UTF-8",stringsAsFactors=FALSE)
tuxiangshibiedata<-read.csv('data/tuxiangshibiedata.csv',
fileEncoding = "UTF-8",stringsAsFactors=FALSE)
yuyinshibiedata<-read.csv('data/yuyinshibiedata.csv',
fileEncoding = "UTF-8",stringsAsFactors=FALSE)
jiqishijuedata<-read.csv('data/jiqishijuedata.csv',
fileEncoding = "UTF-8",stringsAsFactors=FALSE)
suanfagongchengshidata<-read.csv('data/suanfagongchengshidata.csv',
fileEncoding = "UTF-8",stringsAsFactors=FALSE)
ziranyuyanchulidata<-read.csv('data/ziranyuyanchulidata.csv',
fileEncoding = "UTF-8",stringsAsFactors=FALSE)
data<-list(shenduxuexidata=shenduxuexidata,jiqixuexidata=jiqixuexidata,
tuxiangchulidata=tuxiangchulidata,tuxiangshibiedata=tuxiangshibiedata,
yuyinshibiedata=yuyinshibiedata,jiqishijuedata=jiqishijuedata,
suanfagongchengshidata=suanfagongchengshidata,
ziranyuyanchulidata=ziranyuyanchulidata)
data1<-cbind(belong=rep(names(data[1]),nrow(data[[1]])),data[[1]])
for(i in 2:8){data1<-rbind(data1,cbind(belong=rep(names(data[i]),
nrow(data[[i]])),data[[i]]))}
data=data1
sorteddata<-list(NULL)
city<-NULL
district<-NULL
lowsalary<-NULL
highsalary<-NULL
experience<-NULL
degree<-NULL
isday<-NULL
companyfield<-NULL
companymembers<-NULL
companyfinancial<-NULL
today<-Sys.Date()
temp<-NULL
index<-NULL
# process location
temp<-strsplit(data[[4]],split='·')
for(i in 1:nrow(data)){
city<-c(city,temp[[i]][[1]])
if(length(temp[[i]])==2){
district<-c(district,temp[[i]][[2]])
}
else{
district<-c(district,"city")
index<-c(index,i)
}}
temp<-NULL
# process salary
temp<-strsplit(data[[5]],split='-')
for(j in 1:nrow(data)){
lowsalary<-c(lowsalary,as.numeric(chartr("K"," ",chartr("k"," ",temp[[j]][[1]]))))
if(length(temp[[j]])==2){
highsalary<-c(highsalary,as.numeric(chartr("K"," ",chartr("k"," ",temp[[j]][[2]]))))
}
else{
highsalary<-c(highsalary,as.numeric(chartr("K"," ",chartr("k"," ",temp[[j]][[1]]))))
index<-c(index,j)
}
}
# process requirement
temp<-strsplit(data[[6]],split='/')
for(j in 1:nrow(data)){
experience<-c(experience,temp[[j]][[1]])
degree<-c(degree,temp[[j]][[2]])
}
# process company
temp<-strsplit(data[['companysituation']],split='/')
for(j in 1:nrow(data)){
if(length(temp[[j]])==3){
companyfield<-c(companyfield,temp[[j]][[1]])
companyfinancial<-c(companyfinancial,temp[[j]][[2]])
companymembers<-c(companymembers,temp[[j]][[3]])
}
else{
companyfield<-c(companyfield,"blank")
companyfinancial<-c(companyfinancial,"blank")
companymembers<-c(companymembers,"blank")
index<-c(index,j)
}
}
# into a form
sorteddata<-data.frame(belong=data[['belong']],name=data[['name']],
city=city,district=district,lowsalary=lowsalary,highsalary=highsalary,
experience=experience,degree=degree,company=data[['company']],
companyintroduction=data[['companyintro']],companyfield=companyfield,
companyfinancial=companyfinancial,companymembers=companymembers,
tags=data[['tags']])
# check omit
aggr(sorteddata, prop=FALSE, numbers=TRUE,plot = TRUE)
# abandon omit
data<-na.omit(sorteddata)
data<-data[-index,]
# seperate key words
field<-NULL
tag<-NULL
for(i in 1:nrow(data)){
field=c(field,strsplit(chartr("、"," ",chartr(","," ",data$companyfield[[i]]))," ")) }
for(i in 1:nrow(data)){
temp=strsplit(chartr("/"," ",data$tags[[i]])," ")[[1]][c(strsplit(chartr("/"," ",data$tags[[i]])," ")[[1]]!="")]
tag=c(tag,list(temp))
}
data$companyfield<-field
data$tags<-tag
# average salary
data$salary=(data$highsalary+data$lowsalary)/2
data
library(ggplot2)
Majorcity<-table(data$city)[table(data$city)>mean(as.vector(table(data$city)))]
Majorcity
citydata<-data[data[["city"]]%in%names(Majorcity),]
citydata$salary=(citydata$lowsalary+citydata$highsalary)/2
ggplot(citydata,aes(x=city,y=salary),position="jitter",family="STKaiti")+geom_boxplot(notch = TRUE)+ scale_size_area() +xlab("city")+ stat_summary(fun.y="mean", geom="point", shape=23, size=3, fill="white")+theme(text = element_text(family='STKaiti'))
ggplot(citydata,aes(x=salary))+geom_density() +facet_wrap(vars(citydata$city),nrow=2)+
theme(text = element_text(family='STKaiti'))
beijingdata<-data[as.vector(data[["city"]])=="北京",]
beijingdata$district<-as.character(beijingdata$district)
quantile(as.vector(table(beijingdata$district)))
beijingdata<-beijingdata[beijingdata$district%in%names(table(beijingdata$district)[table(beijingdata$district)>20]),]
table(beijingdata$district)
beijingdata
beijingdata$district[beijingdata$district%in%c("北京大学","上地","五道口","西北旺","西二旗","西三旗","学院路","知春路","中关村","海淀区")]="haidianqu"
beijingdata$district[beijingdata$district%in%c("大望路","酒仙桥","望京","朝阳区")]="chaoyangqu"
ggplot(beijingdata,aes(x=district,y=salary))+geom_boxplot()+scale_size_area()
haidian<-beijingdata[beijingdata$district%in%c("北京大学","上地","五道口","西北旺","西二旗","西三旗","学院路","知春路","中关村","海淀区"),]
chaoyang<-beijingdata[beijingdata$district%in%c("大望路","酒仙桥","望京","朝阳区"),]
t.test(haidian$salary,chaoyang$salary)
beijingdata$district[beijingdata$district%in%c("北京大学","上地","五道口","西北旺","西二旗","西三旗","学院路","知春路","中关村","海淀区")]="haidianqu"
beijingdata$district[beijingdata$district%in%c("大望路","酒仙桥","望京","朝阳区")]="chaoyangqu"
ggplot(beijingdata,aes(x=district,y=salary))+geom_boxplot()+scale_size_area()
haidian<-beijingdata[beijingdata$district%in%c("北京大学","上地","五道口","西北旺","西二旗","西三旗","学院路","知春路","中关村","海淀区"),]
chaoyang<-beijingdata[beijingdata$district%in%c("大望路","酒仙桥","望京","朝阳区"),]
t.test(haidian$salary,chaoyang$salary)
beijingdata$district[beijingdata$district%in%c("北京大学","上地","五道口","西北旺","西二旗","西三旗","学院路","知春路","中关村","海淀区")]="haidianqu"
beijingdata$district[beijingdata$district%in%c("大望路","酒仙桥","望京","朝阳区")]="chaoyangqu"
ggplot(beijingdata,aes(x=district,y=salary))+geom_boxplot()+scale_size_area()
haidian<-beijingdata[beijingdata$district%in%c("北京大学","上地","五道口","西北旺","西二旗","西三旗","学院路","知春路","中关村","海淀区"),]
chaoyang<-beijingdata[beijingdata$district%in%c("大望路","酒仙桥","望京","朝阳区"),]
haidian$salary
#t.test(haidian$salary,chaoyang$salary)
beijingdata$district[beijingdata$district%in%c("北京大学","上地","五道口","西北旺","西二旗","西三旗","学院路","知春路","中关村","海淀区")]="haidianqu"
beijingdata$district[beijingdata$district%in%c("大望路","酒仙桥","望京","朝阳区")]="chaoyangqu"
ggplot(beijingdata,aes(x=district,y=salary))+geom_boxplot()+scale_size_area()
haidian<-beijingdata[beijingdata$district%in%c("北京大学","上地","五道口","西北旺","西二旗","西三旗","学院路","知春路","中关村","海淀区"),]
chaoyang<-beijingdata[beijingdata$district%in%c("大望路","酒仙桥","望京","朝阳区"),]
haidian
#t.test(haidian$salary,chaoyang$salary)
knitr::opts_chunk$set(echo = TRUE)
library(stringr)
library(xml2)
library(RSelenium)
library(rvest)
############################################ function of logging into account
login<-function(){
# click login button
xpath5<-'//*[@id="lg_tbar"]/div/ul/li[1]/a'
btn5 <- remDr$findElement(using = 'xpath', value = xpath5)
remDr$mouseMoveToLocation(webElement = btn5)
remDr$click()
xpath0<-'/html/body/section/div[2]/div[1]/div[1]/ul/li[2]'
btn0 <- remDr$findElement(using = 'xpath', value = xpath0)
# move mouse and click
remDr$mouseMoveToLocation(webElement = btn0)
# click
remDr$click()
# input number
xpath1<-'/html/body/section/div[2]/div[1]/div[3]/form/div[1]/input'
btn1 <- remDr$findElement(using = 'xpath', value = xpath1)
# type number
text1 <- 'xxxxxxxxxxx'
btn1$sendKeysToElement(text1)
# pause
Sys.sleep(4)
# get code
xpath4<-'/html/body/section/div[2]/div[1]/div[3]/form/div[3]/div/input[2]'
btn4 <- remDr$findElement(using = 'xpath', value = xpath4)
remDr$mouseMoveToLocation(webElement = btn4)
remDr$click()
# input code
xpath2<-'/html/body/section/div[2]/div[1]/div[3]/form/div[3]/div/input[1]'
btn2 <- remDr$findElement(using = 'xpath', value = xpath2)
text2 <- readline('input code')
btn2$sendKeysToElement(text2)
Sys.sleep(4)
# click button
xpath3<-'/html/body/section/div[2]/div[1]/div[3]/form/div[5]/input'
btn3 <- remDr$findElement(using = 'xpath', value = xpath3)
remDr$mouseMoveToLocation(webElement = btn3)
remDr$click()
}
############################################ function to get data
crawler<-function(url0,url1,filename){
# set browser
remDr = remoteDriver('localhost',4444L,browserName='chrome')
remDr$open()
remDr$navigate(url1)
# not necessarily need to
#login()
# find page
remDr$navigate(url0)
tpage <- remDr$getPageSource()
pageSource <- tpage[[1]]
web <- read_html(pageSource)
# find total page number
pgcttxt <- web %>% html_nodes('div.item_con_pager') %>%
html_nodes('div')%>%html_nodes('a:nth-child(5)')%>% html_text()
pgct = as.numeric(pgcttxt)
setwd('/Users/mayuheng/Desktop')
# innitializing
name=salary=require=location=time=company=companysituation=companyintro=tags=NULL
data=data.frame(name,location,salary,require,time,company,companysituation,
companyintro, tags)
for(i in 1:pgct)
{
url <- paste(url0,i,"/?filterOption=2",sep = '')
web <- read_html(url)
name <- c(name,web %>% html_nodes('div.position') %>%
html_nodes('div.p_top') %>% html_nodes('a') %>%
html_nodes('h3') %>%html_text())
location <- c(location,web %>% html_nodes('div.position') %>%
html_nodes('div.p_top') %>% html_nodes('a') %>%
html_nodes('span') %>%html_nodes('em') %>%html_text())
salary <- c(salary,web %>% html_nodes('div.position') %>%
html_nodes('div.p_bot') %>% html_nodes('div') %>%
html_nodes('span') %>%html_text())
# simple data clean
require<-
c(require, web %>%html_nodes(xpath="//li[@class]/div[1]/div[1]/div[2]/div/text()")
%>%html_text())
require<-require[require!="\n                                    "]
require<-gsub(" ","",require)
require<-gsub("\n","",require)
time<- c(time,web %>% html_nodes('div.position') %>%
html_nodes('div.p_top') %>% html_nodes('span') %>%html_text())
time<-time[grepl("[0-9]",time)]
company <- c(company,web %>% html_nodes('div.company') %>%
html_nodes('div.company_name') %>% html_nodes('a') %>%
html_text())
companysituation <- c(companysituation,web %>% html_nodes('div.company') %>%
html_nodes('div.industry') %>%
html_text())
companysituation<-gsub("\n","",companysituation)
companysituation<-gsub(" ","",companysituation)
companyintro <- c(companyintro,web %>% html_nodes('div.li_b_r') %>%
html_text())
tags<- c(tags, web %>% html_nodes("div.list_item_bot")
%>% html_nodes("div.li_b_l")
%>%html_text())
tags<-gsub("\n","/",tags)
tags<-gsub(" ","",tags)
# data from everypage is stored in pracdata
pracdata<-data.frame(name,location,salary,require,time,company,companysituation,companyintro,tags)
print(pracdata)
# combine
data<-rbind(data,pracdata)
name=salary=require=location=time=company=companysituation=companyintro=tags=NULL
# if needs speed up, time seperation can be set small but may cause requirement to log in.
#if(###)login()
#Sys.sleep(0.5)
x1<-runif(1,3,10)
Sys.sleep(x1)
}
# close browser
remDr$closeWindow()
# output data
write.table(data,file='filename.txt')
write.csv(data,file='filename.csv')
}
library("lubridate",quietly = TRUE,warn.conflicts = FALSE,attch)
library("VIM",quietly = TRUE,warn.conflicts = FALSE)
library("mice",quietly = TRUE,warn.conflicts = FALSE)
setwd("/Users/mayuheng/Documents/GitHub/Data-Science-and-Innovation")
# import data
shenduxuexidata<-read.csv('data/shenduxuexidata.csv',
fileEncoding = "UTF-8",stringsAsFactors=FALSE)
jiqixuexidata<-read.csv('data/jiqixuexidata.csv',
fileEncoding = "UTF-8",stringsAsFactors=FALSE)
tuxiangchulidata<-read.csv('data/tuxiangchulidata.csv',
fileEncoding = "UTF-8",stringsAsFactors=FALSE)
tuxiangshibiedata<-read.csv('data/tuxiangshibiedata.csv',
fileEncoding = "UTF-8",stringsAsFactors=FALSE)
yuyinshibiedata<-read.csv('data/yuyinshibiedata.csv',
fileEncoding = "UTF-8",stringsAsFactors=FALSE)
jiqishijuedata<-read.csv('data/jiqishijuedata.csv',
fileEncoding = "UTF-8",stringsAsFactors=FALSE)
suanfagongchengshidata<-read.csv('data/suanfagongchengshidata.csv',
fileEncoding = "UTF-8",stringsAsFactors=FALSE)
ziranyuyanchulidata<-read.csv('data/ziranyuyanchulidata.csv',
fileEncoding = "UTF-8",stringsAsFactors=FALSE)
data<-list(shenduxuexidata=shenduxuexidata,jiqixuexidata=jiqixuexidata,
tuxiangchulidata=tuxiangchulidata,tuxiangshibiedata=tuxiangshibiedata,
yuyinshibiedata=yuyinshibiedata,jiqishijuedata=jiqishijuedata,
suanfagongchengshidata=suanfagongchengshidata,
ziranyuyanchulidata=ziranyuyanchulidata)
data1<-cbind(belong=rep(names(data[1]),nrow(data[[1]])),data[[1]])
for(i in 2:8){data1<-rbind(data1,cbind(belong=rep(names(data[i]),
nrow(data[[i]])),data[[i]]))}
data=data1
sorteddata<-list(NULL)
city<-NULL
district<-NULL
lowsalary<-NULL
highsalary<-NULL
experience<-NULL
degree<-NULL
isday<-NULL
companyfield<-NULL
companymembers<-NULL
companyfinancial<-NULL
today<-Sys.Date()
temp<-NULL
index<-NULL
# process location
temp<-strsplit(data[[4]],split='·')
for(i in 1:nrow(data)){
city<-c(city,temp[[i]][[1]])
if(length(temp[[i]])==2){
district<-c(district,temp[[i]][[2]])
}
else{
district<-c(district,"city")
index<-c(index,i)
}}
temp<-NULL
# process salary
temp<-strsplit(data[[5]],split='-')
for(j in 1:nrow(data)){
lowsalary<-c(lowsalary,as.numeric(chartr("K"," ",chartr("k"," ",temp[[j]][[1]]))))
if(length(temp[[j]])==2){
highsalary<-c(highsalary,as.numeric(chartr("K"," ",chartr("k"," ",temp[[j]][[2]]))))
}
else{
highsalary<-c(highsalary,as.numeric(chartr("K"," ",chartr("k"," ",temp[[j]][[1]]))))
index<-c(index,j)
}
}
# process requirement
temp<-strsplit(data[[6]],split='/')
for(j in 1:nrow(data)){
experience<-c(experience,temp[[j]][[1]])
degree<-c(degree,temp[[j]][[2]])
}
# process company
temp<-strsplit(data[['companysituation']],split='/')
for(j in 1:nrow(data)){
if(length(temp[[j]])==3){
companyfield<-c(companyfield,temp[[j]][[1]])
companyfinancial<-c(companyfinancial,temp[[j]][[2]])
companymembers<-c(companymembers,temp[[j]][[3]])
}
else{
companyfield<-c(companyfield,"blank")
companyfinancial<-c(companyfinancial,"blank")
companymembers<-c(companymembers,"blank")
index<-c(index,j)
}
}
# into a form
sorteddata<-data.frame(belong=data[['belong']],name=data[['name']],
city=city,district=district,lowsalary=lowsalary,highsalary=highsalary,
experience=experience,degree=degree,company=data[['company']],
companyintroduction=data[['companyintro']],companyfield=companyfield,
companyfinancial=companyfinancial,companymembers=companymembers,
tags=data[['tags']])
# check omit
aggr(sorteddata, prop=FALSE, numbers=TRUE,plot = TRUE)
# abandon omit
data<-na.omit(sorteddata)
data<-data[-index,]
# seperate key words
field<-NULL
tag<-NULL
for(i in 1:nrow(data)){
field=c(field,strsplit(chartr("、"," ",chartr(","," ",data$companyfield[[i]]))," ")) }
for(i in 1:nrow(data)){
temp=strsplit(chartr("/"," ",data$tags[[i]])," ")[[1]][c(strsplit(chartr("/"," ",data$tags[[i]])," ")[[1]]!="")]
tag=c(tag,list(temp))
}
data$companyfield<-field
data$tags<-tag
# average salary
data$salary=(data$highsalary+data$lowsalary)/2
data
library(ggplot2)
Majorcity<-table(data$city)[table(data$city)>mean(as.vector(table(data$city)))]
Majorcity
citydata<-data[data[["city"]]%in%names(Majorcity),]
citydata$salary=(citydata$lowsalary+citydata$highsalary)/2
ggplot(citydata,aes(x=city,y=salary),position="jitter",family="STKaiti")+geom_boxplot(notch = TRUE)+ scale_size_area() +xlab("city")+ stat_summary(fun.y="mean", geom="point", shape=23, size=3, fill="white")+theme(text = element_text(family='STKaiti'))
ggplot(citydata,aes(x=salary))+geom_density() +facet_wrap(vars(citydata$city),nrow=2)+
theme(text = element_text(family='STKaiti'))
beijingdata<-data[as.vector(data[["city"]])=="北京",]
beijingdata$district<-as.character(beijingdata$district)
quantile(as.vector(table(beijingdata$district)))
beijingdata<-beijingdata[beijingdata$district%in%names(table(beijingdata$district)[table(beijingdata$district)>20]),]
table(beijingdata$district)
beijingdata$district[beijingdata$district%in%c("北京大学","上地","五道口","西北旺","西二旗","西三旗","学院路","知春路","中关村","海淀区")]="haidianqu"
beijingdata$district[beijingdata$district%in%c("大望路","酒仙桥","望京","朝阳区")]="chaoyangqu"
ggplot(beijingdata,aes(x=district,y=salary))+geom_boxplot()+scale_size_area()
haidian<-beijingdata[beijingdata$district%in%c("北京大学","上地","五道口","西北旺","西二旗","西三旗","学院路","知春路","中关村","海淀区"),]
chaoyang<-beijingdata[beijingdata$district%in%c("大望路","酒仙桥","望京","朝阳区"),]
haidian
#t.test(haidian$salary,chaoyang$salary)
beijingdata$district[beijingdata$district%in%c("北京大学","上地","五道口","西北旺","西二旗","西三旗","学院路","知春路","中关村","海淀区")]="haidianqu"
beijingdata$district[beijingdata$district%in%c("大望路","酒仙桥","望京","朝阳区")]="chaoyangqu"
ggplot(beijingdata,aes(x=district,y=salary))+geom_boxplot()+scale_size_area()
haidian<-beijingdata[beijingdata$district%in%c("haidianqu"),]
chaoyang<-beijingdata[beijingdata$district%in%c("chaoyangqu"),]
haidian
#t.test(haidian$salary,chaoyang$salary)
beijingdata$district[beijingdata$district%in%c("北京大学","上地","五道口","西北旺","西二旗","西三旗","学院路","知春路","中关村","海淀区")]="haidianqu"
beijingdata$district[beijingdata$district%in%c("大望路","酒仙桥","望京","朝阳区")]="chaoyangqu"
ggplot(beijingdata,aes(x=district,y=salary))+geom_boxplot()+scale_size_area()
haidian<-beijingdata[beijingdata$district%in%c("haidianqu"),]
chaoyang<-beijingdata[beijingdata$district%in%c("chaoyangqu"),]
t.test(haidian$salary,chaoyang$salary)
beijingdata$district[beijingdata$district%in%c("北京大学","上地","五道口","西北旺","西二旗","西三旗","学院路","知春路","中关村","海淀区")]="haidianqu"
beijingdata$district[beijingdata$district%in%c("大望路","酒仙桥","望京","朝阳区")]="chaoyangqu"
ggplot(beijingdata,aes(x=district,y=salary))+geom_boxplot()+scale_size_area()
haidian<-beijingdata[beijingdata$district%in%c("haidianqu"),]
chaoyang<-beijingdata[beijingdata$district%in%c("chaoyangqu"),]
t.test(haidian$salary,chaoyang$salary)
ggplot(data,aes(x=data$belong,y=salary))+geom_boxplot()
q<-NULL
for(i in 1:8){q<- c(q,quantile(data$salary[data$belong==names(table(data$belong))[i]])[4])}
# process topics
belong[jiqixuexidata]
# process topics
data$belong[jiqixuexidata]
# process topics
data$belong==jiqixueqidata
# process topics
data$belong=="jiqixueqidata"
# process topics
data$belong[data$belong=="jiqixueqidata"]="机器学习"
# process topics
data$belong[data$belong=="jiqixueqidata"]
# process topics
data$belong[data$belong=="jiqixueqidata"]<-"机器学习"
# process topics
a<-c(1,1,2)
a[a==1]<-2
a
data$belong[data$belong=="jiqixueqidata"]<-"机器学习"
# process topics
data$belong[data$belong=="jiqixueqidata"]<-"机器学习"
data
# process topics
class(data$belong)
data$belong[data$belong==jiqixueqidata]<-"机器学习"
# process topics
class(data$belong)
#data$belong[data$belong==jiqixueqidata]<-"机器学习"
data
